knitr::opts_chunk$set(echo = TRUE)
breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest(caller, Tumor_Sample_Barcode)
library(tidyverse)
library(purrr)
library(testthat)
getwd()
read.table.with.name <- function(df.name, file_list, ...){
#read in df table, with name of file as factor
df <- read.table(df.name, ...)
df$caller <- factor(df.name, levels=file_list)
df
}
IOU <- function(...){
#find size of intersection over union for arbitrary # of vectors
args <- list(...)
intersect_ <- reduce(args, intersect)
union_ <- reduce(args, union)
return(length(intersect_)/length(union_))
}
expect_equal(IOU(rep(1:5, 3)), 1)
expect_equal(IOU(c(1,2,3), c(2,3,4)), .5)
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest(caller, Tumor_Sample_Barcode)
setwd("../../breast_data/slimmed")
#has seperate datasets for 4 different callers
maf_files <- list.files()
breast_df_list <- map(maf_files, read.table.with.name, maf_files, skip=4, header=TRUE, stringsAsFactors=FALSE)
breast_df <- do.call(rbind, breast_df_list)
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest(caller, Tumor_Sample_Barcode)
test
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest(caller, Tumor_Sample_Barcode) %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
IOU= map(newcol, ~ do.call(IOU, .x[[1]]))) %>%
unnest(IOU)
test
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest(caller, Tumor_Sample_Barcode) %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
IOU= map(newcol, ~ do.call(function(x) IOU(x[[1]]), .x))) %>%
unnest(IOU)
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
IOU= map(newcol, ~ do.call(function(x) IOU(x[[1]]), .x))) %>%
unnest(IOU)
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
IOU= map(newcol, ~ do.call(function(x) IOU(x[[1]]), .x)))
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller))
)
test
test$newcol[[1]]
test$data[1]
test$data
yo <- test$data[1]
str(yo)
yo
split(yo, f = yo$caller)
yo[[1]]
str(yo[[1]])
str(unnest(yo))
yo
yo[[1]]
newcol
test$newcol
test$newcol[[1]]
test$newcol[1]
unlist(test$newcol[1])
ls
str(head(test$newcol))
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
IOU= map(newcol, ~ do.call(function(x) IOU(x[[1]]$Tumor_Sample_Barcode), .x))) %>%
unnest(IOU)
new <- test$newcol
map(new, ~ do.call(function(x) IOU(x)), .x)
map(new, ~ do.call(function(x) IOU(x), .x))
map(new, ~ do.call(cbind(), .x))
map(new, ~ do.call(cbind, .x))
map(new, ~ do.call(rbind, .x))
map(new, ~ do.call(function(x) IOU(x)), .x)
map(new, ~ do.call(function(x) IOU(x), .x)
)
map(new, ~ do.call(function(x) IOU(pluck(x, 2), .x))
)
map(new, ~ do.call(function(x) IOU(pluck(x, 2)), .x))
map(new, ~ do.call(function(x) (pluck(x, 2)), .x))
map(new, ~ pluck(.x, 2))
map(new, ~ pluck(.x, 1))
map(new, ~ pluck(.x[[1]], 1))
map(new, ~ pluck(.x[[2]], 1))
map(new, ~ pluck(.x[[1]], 2))
breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest()
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)))#,
test
new
test
new <- test$newcol
new
pluck(new, 2)
pluck(new[[1]], 2)
map(new, ~.pluck(.x[[1]], 2))
map(new, ~pluck(.x[[1]], 2))
length(map(new, ~pluck(.x[[1]], 2)))
hmm <- (map(new, ~pluck(.x[[1]], 2))
)
str(hmm[1])
test
new
new[1]
str(new[1])
str(new[1][2])
str(new[1,2])
str(new)
new
test
test$newcol
new
new[1]
str(new[1])
str(new[[1]])
map(new[[1]], ~.x)
map(new[[1]], ~.x$Start_Position)
Start_Position = map(newcol, ~.x$Start_Position)
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol, ~.x$Start_Position)
test
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol, ~.x$Start_Position))
test
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol, ~.x[[1]]$Start_Position))
test
test$Start_Position
test$Start_Position[1]
test$Start_Position[2]
test$Start_Position[[1]]
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol, ~.x[1]$Start_Position))
test
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol, ~.x$Start_Position))
test
new
map(new, ~.x)
map(new, map, ~.x)
new
new[[1]]
map(new, map, ~.x$caller)
map(new, map, ~.x$Start_Position)
map(new, ~.x$Start_Position)
map(new, map, ~.x$Start_Position)
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol,map, ~.x$Start_Position))
test
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol,map, ~.x$Start_Position),
IOU=map(.x = Start_Position, do.call(IOU, .x)))
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol,map, ~.x$Start_Position),
IOU=map(.x = Start_Position, ~ do.call(IOU, .x)))
test
test$IOU
#combine list of dfs
test <- breast_df %>% select(Tumor_Sample_Barcode, caller, Start_Position) %>%
group_by(Tumor_Sample_Barcode) %>%
nest() %>%
mutate(newcol= map(data, .f = ~split(.x, .x$caller)),
Start_Position = map(newcol,map, ~.x$Start_Position),
IOU=map(.x = Start_Position, ~ do.call(IOU, .x))) %>%
unnest(IOU)
test
mean(test$IOU)
hist(test$IOU)
